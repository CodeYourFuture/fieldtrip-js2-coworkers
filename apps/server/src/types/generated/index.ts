/**
 * !!! This file is autogenerated do not edit by hand !!!
 *
 * Generated by: @databases/pg-schema-print-types
 * Checksum: GOyRO0mjPKMqLS5XxRU3dcIZ0pcBdDW+VT9LJT66c5IRxxSs3CFeYqJbfA9DGgJStqs2DwsN6Y3vmcPMA8j2Mw==
 */

/* eslint-disable */
// tslint:disable

import Enrollments, {Enrollments_InsertParameters} from './enrollments'
import Events, {Events_InsertParameters} from './events'
import Executions, {Executions_InsertParameters} from './executions'
import Logs, {Logs_InsertParameters} from './logs'
import Migrations, {Migrations_InsertParameters} from './migrations'
import TaskStats, {TaskStats_InsertParameters} from './task_stats'
import Tasks, {Tasks_InsertParameters} from './tasks'

interface DatabaseSchema {
  enrollments: {record: Enrollments, insert: Enrollments_InsertParameters};
  events: {record: Events, insert: Events_InsertParameters};
  executions: {record: Executions, insert: Executions_InsertParameters};
  logs: {record: Logs, insert: Logs_InsertParameters};
  migrations: {record: Migrations, insert: Migrations_InsertParameters};
  task_stats: {record: TaskStats, insert: TaskStats_InsertParameters};
  tasks: {record: Tasks, insert: Tasks_InsertParameters};
}
export default DatabaseSchema;

/**
 * JSON serialize values (v) if the table name (t) and column name (c)
 * is a JSON or JSONB column.
 * This is necessary if you want to store values that are not plain objects
 * in a JSON or JSONB column.
 */
function serializeValue(t: string, c: string, v: unknown): unknown {
  if (
    (t === "enrollments" && (c === "bots" || c === "hooks" || c === "milestones")) ||
    (t === "events" && c === "payload") ||
    (t === "logs" && c === "message") ||
    (t === "tasks" && (c === "context" || c === "params"))
  ) {
    return JSON.stringify(v);
  }
  return v;
}
export {serializeValue}

export type {
  Enrollments,
  Enrollments_InsertParameters,
  Events,
  Events_InsertParameters,
  Tasks,
  Tasks_InsertParameters,
  Executions,
  Executions_InsertParameters,
  Logs,
  Logs_InsertParameters,
  Migrations,
  Migrations_InsertParameters,
  TaskStats,
  TaskStats_InsertParameters,
}
